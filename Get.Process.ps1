#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: aba510cb-4c8a-42c4-9add-8b4fa16d3b73
# Source File: C:\Users\den\Documents\my programs\Get.process.gui.psf
#------------------------------------------------------------------------

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2015 v4.2.81
     Generated on:       12/6/2015 9:16 PM
     Generated by:       den
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2015
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-Get_process_gui_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formGetProcess = New-Object 'System.Windows.Forms.Form'
	$labelThisWillQueryTheProc = New-Object 'System.Windows.Forms.Label'
	$textboxComputerName = New-Object 'System.Windows.Forms.TextBox'
	$buttonExit = New-Object 'System.Windows.Forms.Button'
	$buttonGetProcess = New-Object 'System.Windows.Forms.Button'
	$textboxOutput = New-Object 'System.Windows.Forms.TextBox'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formGetProcess_Load={
		#TODO: Initialize Form Controls here
		
	}
	
	$buttonGetProcess_Click={
		$textboxOutput.Text = Get-Process -ComputerName ($textboxComputerName.Text) | Out-String
	}
	
	$textboxOutput_TextChanged={
		#TODO: Place custom script here
		
	}
	
	$buttonExit_Click={
	$formGetProcess.Close()
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formGetProcess.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonExit.remove_Click($buttonExit_Click)
			$buttonGetProcess.remove_Click($buttonGetProcess_Click)
			$textboxOutput.remove_TextChanged($textboxOutput_TextChanged)
			$formGetProcess.remove_Load($formGetProcess_Load)
			$formGetProcess.remove_Load($Form_StateCorrection_Load)
			$formGetProcess.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formGetProcess.SuspendLayout()
	#
	# formGetProcess
	#
	$formGetProcess.Controls.Add($labelThisWillQueryTheProc)
	$formGetProcess.Controls.Add($textboxComputerName)
	$formGetProcess.Controls.Add($buttonExit)
	$formGetProcess.Controls.Add($buttonGetProcess)
	$formGetProcess.Controls.Add($textboxOutput)
	$formGetProcess.ClientSize = '635, 383'
	$formGetProcess.Name = "formGetProcess"
	$formGetProcess.StartPosition = 'CenterScreen'
	$formGetProcess.Text = "Get Process"
	$formGetProcess.add_Load($formGetProcess_Load)
	#
	# labelThisWillQueryTheProc
	#
	$labelThisWillQueryTheProc.Location = '13, 13'
	$labelThisWillQueryTheProc.Name = "labelThisWillQueryTheProc"
	$labelThisWillQueryTheProc.Size = '608, 23'
	$labelThisWillQueryTheProc.TabIndex = 4
	$labelThisWillQueryTheProc.Text = "This will query the process on remote machine. Start by typing the PC name. Then, click Get Process."
	#
	# textboxComputerName
	#
	$textboxComputerName.Location = '13, 39'
	$textboxComputerName.Name = "textboxComputerName"
	$textboxComputerName.Size = '167, 20'
	$textboxComputerName.TabIndex = 3
	#
	# buttonExit
	#
	$buttonExit.Anchor = 'Bottom, Right'
	$buttonExit.Location = '546, 349'
	$buttonExit.Name = "buttonExit"
	$buttonExit.Size = '75, 23'
	$buttonExit.TabIndex = 2
	$buttonExit.Text = "Exit"
	$buttonExit.UseVisualStyleBackColor = $True
	$buttonExit.add_Click($buttonExit_Click)
	#
	# buttonGetProcess
	#
	$buttonGetProcess.Anchor = 'Bottom, Left'
	$buttonGetProcess.Location = '13, 349'
	$buttonGetProcess.Name = "buttonGetProcess"
	$buttonGetProcess.Size = '75, 23'
	$buttonGetProcess.TabIndex = 1
	$buttonGetProcess.Text = "Get Process"
	$buttonGetProcess.UseVisualStyleBackColor = $True
	$buttonGetProcess.add_Click($buttonGetProcess_Click)
	#
	# textboxOutput
	#
	$textboxOutput.Anchor = 'Top, Bottom, Left, Right'
	$textboxOutput.Font = "Consolas, 8.25pt"
	$textboxOutput.Location = '13, 75'
	$textboxOutput.Multiline = $True
	$textboxOutput.Name = "textboxOutput"
	$textboxOutput.ScrollBars = 'Vertical'
	$textboxOutput.Size = '608, 268'
	$textboxOutput.TabIndex = 0
	$textboxOutput.add_TextChanged($textboxOutput_TextChanged)
	$formGetProcess.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formGetProcess.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formGetProcess.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formGetProcess.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formGetProcess.ShowDialog()

} #End Function

#Call the form
Call-Get_process_gui_psf | Out-Null
