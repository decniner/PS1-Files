#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: fb3a62ed-91ee-4ac6-87cb-debb2d676bde
# Source File: C:\Users\den\Documents\my programs\Process Killer.psf
#------------------------------------------------------------------------

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2015 v4.2.81
     Generated on:       12/5/2015 6:15 PM
     Generated by:       den
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2015
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-Process_Killer_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formProcessKiller = New-Object 'System.Windows.Forms.Form'
	$labelContact = New-Object 'System.Windows.Forms.Label'
	$linklabelDenversancheznomurac = New-Object 'System.Windows.Forms.LinkLabel'
	$groupboxSelectProcess = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxRestartProcess = New-Object 'System.Windows.Forms.CheckBox'
	$buttonOK = New-Object 'System.Windows.Forms.Button'
	$comboboxRunningProcess = New-Object 'System.Windows.Forms.ComboBox'
	$buttonGetProcess = New-Object 'System.Windows.Forms.Button'
	$textboxComputerName = New-Object 'System.Windows.Forms.TextBox'
	$labelThisWillKillARunning = New-Object 'System.Windows.Forms.Label'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formProcessKiller_Load={
		#TODO: Initialize Form Controls here
		
	}
	
	#region Control Helper Functions
	function Load-ComboBox 
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
	
		.PARAMETER  ComboBox
			The ComboBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ComboBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red" -Append
			Load-ComboBox $combobox1 "White" -Append
			Load-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Load-ComboBox $combobox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ComboBox]$ComboBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$ComboBox.Items.Clear()	
		}
		
		if($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [Array])
		{
			$ComboBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$ComboBox.Items.Add($obj)	
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)	
		}
	
		$ComboBox.DisplayMember = $DisplayMember	
	}
	#endregion
	
	$buttonGetProcess_Click={
		$process = Get-Process -ComputerName ($textboxComputerName.Text) | Select-Object -ExpandProperty Name
		Load-ComboBox $comboboxRunningProcess -Items $process
		$groupboxSelectProcess.Visible = $true
		$comboboxRunningProcess.SelectedIndex = 0
	}
	
	$buttonOK_Click = {
		
		if ($checkboxRestartProcess.Checked)
		{
			Stop-Process -ProcessName $comboboxRunningProcess.SelectedItem -Force
			Start-Process $comboboxRunningProcess.SelectedItem
		}
		
		else
		{
			Stop-Process -ProcessName $comboboxRunningProcess.SelectedItem -Force
		}
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formProcessKiller.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonOK.remove_Click($buttonOK_Click)
			$buttonGetProcess.remove_Click($buttonGetProcess_Click)
			$formProcessKiller.remove_Load($formProcessKiller_Load)
			$formProcessKiller.remove_Load($Form_StateCorrection_Load)
			$formProcessKiller.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formProcessKiller.SuspendLayout()
	$groupboxSelectProcess.SuspendLayout()
	#
	# formProcessKiller
	#
	$formProcessKiller.Controls.Add($labelContact)
	$formProcessKiller.Controls.Add($linklabelDenversancheznomurac)
	$formProcessKiller.Controls.Add($groupboxSelectProcess)
	$formProcessKiller.Controls.Add($buttonGetProcess)
	$formProcessKiller.Controls.Add($textboxComputerName)
	$formProcessKiller.Controls.Add($labelThisWillKillARunning)
	$formProcessKiller.ClientSize = '306, 232'
	$formProcessKiller.FormBorderStyle = 'FixedDialog'
	$formProcessKiller.MaximizeBox = $False
	$formProcessKiller.Name = "formProcessKiller"
	$formProcessKiller.StartPosition = 'CenterScreen'
	$formProcessKiller.Text = "Process Killer"
	$formProcessKiller.add_Load($formProcessKiller_Load)
	#
	# labelContact
	#
	$labelContact.Location = '12, 207'
	$labelContact.Name = "labelContact"
	$labelContact.Size = '51, 26'
	$labelContact.TabIndex = 5
	$labelContact.Text = "Contact:"
	#
	# linklabelDenversancheznomurac
	#
	$linklabelDenversancheznomurac.Location = '62, 207'
	$linklabelDenversancheznomurac.Name = "linklabelDenversancheznomurac"
	$linklabelDenversancheznomurac.Size = '169, 23'
	$linklabelDenversancheznomurac.TabIndex = 4
	$linklabelDenversancheznomurac.TabStop = $True
	$linklabelDenversancheznomurac.Text = "denver.sanchez@nomura.com"
	#
	# groupboxSelectProcess
	#
	$groupboxSelectProcess.Controls.Add($checkboxRestartProcess)
	$groupboxSelectProcess.Controls.Add($buttonOK)
	$groupboxSelectProcess.Controls.Add($comboboxRunningProcess)
	$groupboxSelectProcess.Location = '13, 90'
	$groupboxSelectProcess.Name = "groupboxSelectProcess"
	$groupboxSelectProcess.Size = '280, 99'
	$groupboxSelectProcess.TabIndex = 3
	$groupboxSelectProcess.TabStop = $False
	$groupboxSelectProcess.Text = "Select Process"
	#
	# checkboxRestartProcess
	#
	$checkboxRestartProcess.Location = '7, 60'
	$checkboxRestartProcess.Name = "checkboxRestartProcess"
	$checkboxRestartProcess.Size = '162, 33'
	$checkboxRestartProcess.TabIndex = 2
	$checkboxRestartProcess.Text = "Restart selected process"
	$checkboxRestartProcess.UseVisualStyleBackColor = $True
	#
	# buttonOK
	#
	$buttonOK.Location = '167, 20'
	$buttonOK.Name = "buttonOK"
	$buttonOK.Size = '107, 23'
	$buttonOK.TabIndex = 1
	$buttonOK.Text = "OK"
	$buttonOK.UseVisualStyleBackColor = $True
	$buttonOK.add_Click($buttonOK_Click)
	#
	# comboboxRunningProcess
	#
	$comboboxRunningProcess.FormattingEnabled = $True
	$comboboxRunningProcess.Location = '7, 20'
	$comboboxRunningProcess.Name = "comboboxRunningProcess"
	$comboboxRunningProcess.Size = '154, 21'
	$comboboxRunningProcess.Sorted = $True
	$comboboxRunningProcess.TabIndex = 0
	#
	# buttonGetProcess
	#
	$buttonGetProcess.Location = '189, 54'
	$buttonGetProcess.Name = "buttonGetProcess"
	$buttonGetProcess.Size = '104, 23'
	$buttonGetProcess.TabIndex = 2
	$buttonGetProcess.Text = "Get Process"
	$buttonGetProcess.UseVisualStyleBackColor = $True
	$buttonGetProcess.add_Click($buttonGetProcess_Click)
	#
	# textboxComputerName
	#
	$textboxComputerName.Location = '13, 56'
	$textboxComputerName.Name = "textboxComputerName"
	$textboxComputerName.Size = '169, 20'
	$textboxComputerName.TabIndex = 1
	#
	# labelThisWillKillARunning
	#
	$labelThisWillKillARunning.Location = '13, 13'
	$labelThisWillKillARunning.Name = "labelThisWillKillARunning"
	$labelThisWillKillARunning.Size = '280, 31'
	$labelThisWillKillARunning.TabIndex = 0
	$labelThisWillKillARunning.Text = "This will kill a running process on a computer.  To begin, enter the pc name then click Get Process."
	$groupboxSelectProcess.ResumeLayout()
	$formProcessKiller.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formProcessKiller.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formProcessKiller.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formProcessKiller.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formProcessKiller.ShowDialog()

} #End Function

#Call the form
Call-Process_Killer_psf | Out-Null
